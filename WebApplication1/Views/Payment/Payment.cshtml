@model RazorPayOptionsModel
@{
    ViewData["Title"] = "Payment";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<h1>Payment</h1>

<form asp-action="AfterPayment">
    <input type="hidden" name="orderid" id="orderid" />
    <input type="hidden" name="paymentid" id="paymentid" />
    <input type="hidden" name="signature" id="signature" />
    <input type="hidden" name="paymentstatus" id="paymentstatus" />
    <input type="submit" id="btnAfterPayment" hidden />
</form>

<button id="rzp-button1" hidden>Pay</button>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
    var paymentNotes = @Html.Raw(Json.Serialize(Model.Notes));
    var options = {
        "key": "@Model.Key", // Enter the Key ID generated from the Dashboard
        "amount": "@Model.AmountInSubUnits", // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
        "currency": "@Model.Currency",
        "name": "@Model.Name", //your business name
        "description": "@Model.Description",
        "image": "@Model.ImageLogUrl",
        "order_id": "@Model.OrderId", //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
        "handler": function (response) {
            alert(response.razorpay_payment_id);
            alert(response.razorpay_order_id);
            alert(response.razorpay_signature)
            $('#orderid').val(response.razorpay_order_id);
            $('#paymentid').val(response.razorpay_payment_id);
            $('#signature').val(response.razorpay_signature);

            $('#paymentstatus').val('Success');
            $('#btnAfterPayment').click();
        },
        "prefill": { //We recommend using the prefill parameter to auto-fill customer's contact information, especially their phone number
            "name": "@Model.ProfileName", //your customer's name
            "email": "@Model.ProfileEmail",
            "contact": "@Model.ProfileContact"  //Provide the customer's phone number for better conversion rates
        },
        "notes": paymentNotes,
        "theme": {
            "color": "#3399cc"
        }
    };
    var rzp1 = new Razorpay(options);
    rzp1.on('payment.failed', function (response) {
        console.log(response.error);

        $('#paymentstatus').val('Fail');
        $('#btnAfterPayment').click();
        // alert(response.error.code);
        // alert(response.error.description);
        // alert(response.error.source);
        // alert(response.error.step);
        // alert(response.error.reason);
        // alert(response.error.metadata.order_id);
        // alert(response.error.metadata.payment_id);
    });
    // document.getElementById('rzp-button1').onclick = function (e) {
    //     rzp1.open();
    //     e.preventDefault();
    // }
</script>

@section scripts {
    <script>
        $(function () {
            rzp1.open();
        });
    </script>
}